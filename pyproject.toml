[project]
# include = {
# }

name = "nonebot-plugin-genshinuid"
version = "4.6.0"
description = "支持OneBot(QQ)、OneBotV12、QQ频道、微信、KOOK（开黑啦）、Telegram（电报）、FeiShu（飞书）、DoDo、Villa（米游社大别野）、Discord的全功能NoneBot2原神插件"
authors = [
    { name = "KimigaiiWuyi", email = "444835641@qq.com" },
    { name = "MingxuanGame", email = "MingxuanGame@outlook.com" },
]
dependencies = [
    "nonebot2>=2.2.0",
    "websockets>=12.0",
    "nonebot-plugin-apscheduler>=0.3.0",
]
requires-python = ">=3.8.1"
readme = "README.md"
license = { text = "GPL-3.0-or-later" }
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.2.1",
    "nonebot-adapter-onebot>=2.3.1",
    "nonebot-adapter-dodo>=0.1.4",
    "nonebot-adapter-kaiheila>=0.3.0",
    "nonebot-adapter-villa>=1.4.2",
    "nonebot-adapter-discord>=0.1.3",
    "nonebot-adapter-telegram>=0.1.0b15",
    "nonebot-adapter-qq>=1.3.5",
    "nonebot-adapter-feishu>=2.3.2",
    "nonebot-adapter-red>=0.8.0",
    "nonebot-adapter-ntchat>=0.3.5",
]

[tool.ruff]
line-length = 79

[tool.ruff.lint]
ignore = ["PLR0913", "TRY003", "COM812", "ISC001"]
select = [
    "E",
    "W",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "RUF", # ruff
    "TRY", # tryceratops
    # "D",        # pydocstyle

    # pylint
    "PLW", # Warning
    "PLR", # Refactor
    "PLE", # Error

    "PTH",   # flake8-use-pathlib
    "SLF",   # flake8-self
    "RET",   # flake8-return
    "RSE",   # flake8-raise
    "T20",   # flake8-print
    "PIE",   # flake8-pie
    "ISC",   # flake8-implicit-str-concat
    "C4",    # flake8-comprehensions
    "COM",   # flake8-commas
    "A",     # flake8-builtins
    "B",     # flake8-bugbear
    "ASYNC", # flake8-async
]


allowed-confusables = ["，", "。", "（", "）", "；"]

[tool.ruff.lint.isort]
force-sort-within-sections = true
extra-standard-library = ["typing_extensions"]
force-wrap-aliases = true
combine-as-imports = true
order-by-type = true
relative-imports-order = "closest-to-furthest"
required-imports = ["from __future__ import annotations"]
section-order = [
    "future",
    "standard-library",
    "first-party",
    "local-folder",
    "third-party",
]


[tool.pdm.scripts]
lint = "ruff check ."
fix = "ruff check --fix ."
format = "ruff format ."

[tool.pyright]
reportShadowedImports = false
pythonVersion = "3.8"
pythonPlatform = "All"
executionEnvironments = [{ root = "./" }]
